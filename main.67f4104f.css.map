{"version":3,"sources":["styles\\utils\\reset.scss","styles\\utils\\normilize.scss","styles\\utils\\animation.scss","styles\\blocks\\page-content.scss","styles\\utils\\_variables.scss","styles\\blocks\\clock.scss","styles\\utils\\_mixins.scss","styles\\utils\\_functions.scss","styles\\blocks\\dial.scss"],"names":[],"mappings":"AAAA,gBAIE,QAAS,CACT,SAAU,CACV,QAAS,CACT,mBAAoB,CCPtB,EACE,qBAAsB,CAGxB,GACE,eAAgB,CCLlB,wBACE,GACE,uBAA0B,CAAA,CCF9B,cACE,YAAa,CACb,sBAAuB,CACvB,kBAAmB,CACnB,eCJe,CDMf,wBCOkB,CCbpB,OACE,iBAAkB,CCAlB,WFCmB,CEAnB,UFAmB,CECnB,iBAAkB,CDClB,wBDUmB,CCTnB,wBDU2B,CCT3B,8BDUoB,CCRpB,YACE,iBAAkB,CCRpB,YFUkC,CETlC,WFSkC,CERlC,iBAAkB,CDShB,wBDGyB,CCDzB,uBAAwB,CAExB,UEH0D,CFK1D,WEDsD,CFKxD,oBAEE,QErBoD,CFsBpD,WElB0D,CDC1D,WFHsC,CEItC,WFHsC,CCuBtC,wBDZkB,CCelB,0CAAmD,CAIrD,wCAbE,iBAAkB,CCblB,iBAAkB,CDqBlB,uBAeiD,CAVnD,oBAEE,SEnCoD,CFoCpD,WEhC0D,CDM1D,aFLsC,CEMtC,WFLsC,CCkCtC,wBDzBkB,CC4BlB,4CAAiD,CG9CrD,MFCE,WFEkB,CEDlB,UFCkB,CEAlB,iBAAkB,CEAlB,iBAAkB,CAElB,sCJgByC,CIfzC,iBAAkB,CAElB,cACE,iBAAkB,CAClB,WAAY,CACZ,UAAW,CAEX,aJMmB,CIHjB,uBACE,WAAgB,CAElB,iBACE,uBAA6B,CAJ/B,uBACE,WAAgB,CAElB,iBACE,uBAA6B,CAJ/B,uBACE,WAAgB,CAElB,iBACE,uBAA6B,CAJ/B,uBACE,WAAgB,CAElB,iBACE,wBAA6B,CAJ/B,uBACE,WAAgB,CAElB,iBACE,wBAA6B,CAJ/B,uBACE,WAAgB,CAElB,iBACE,wBAA6B,CAJ/B,uBACE,WAAgB,CAElB,iBACE,wBAA6B,CAJ/B,uBACE,WAAgB,CAElB,iBACE,wBAA6B,CAJ/B,uBACE,WAAgB,CAElB,iBACE,wBAA6B,CAJ/B,wBACE,YAAgB,CAElB,kBACE,wBAA6B,CAJ/B,wBACE,YAAgB,CAElB,kBACE,wBAA6B,CAJ/B,wBACE,YAAgB,CAElB,kBACE,uBAA6B","file":"main.67f4104f.css","sourceRoot":"..\\src","sourcesContent":["body,\nspan,\nul,\nli {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-family: inherit;\n}\n","* {\n  box-sizing: border-box;\n}\n\nul {\n  list-style: none;\n}\n","@keyframes rotate-arrow {\n  100% {\n    transform: rotateZ(360deg);\n  }\n}\n",".page-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: $top-padding;\n\n  background-color: $page-color;\n}\n","$top-padding: 4vh;\n\n$clock-diameter: 80vh;\n$dial-diameter: 78vh;\n\n$second-hand-height: 0.3 * $clock-diameter;\n$second-hand-width: 0.03 * $clock-diameter;\n\n$minute-hand-height:0.42 * $clock-diameter;\n$minute-hand-width: 0.02 * $clock-diameter;\n\n$dot-diameter: $clock-diameter *0.08;\n\n$page-color: #cbbeb0;\n$clock-color: #635045;\n$clock-details-color: #558a86;\n$shadow-color: #375c5f;\n$second-color: #6e7f29;\n$minute-color: #e7b300;\n$numbers-color: #dbd5bb;\n\n$numbers-font: arial, helvetica, sans-serif;\n\n$one-hour: 3600s;\n$one-minute: 60s;\n",".clock {\n  position: relative;\n  @include circle($clock-diameter);\n\n  background-color: $clock-color;\n  border: 2px solid $clock-details-color;\n  box-shadow: 0 0 7px 3px $shadow-color;\n\n  &__dot {\n    position: absolute;\n    @include circle($dot-diameter);\n\n    background-color: $clock-details-color;\n\n    transform-origin: center;\n\n    top: get-distance($dot-diameter, $top:true, $arrow:false);\n\n    left: get-distance($dot-diameter, $top:false, $arrow:false);\n\n  }\n\n  &__second-hand {\n    position: absolute;\n    top: get-distance($second-hand-height, $top:true);\n    left: get-distance($second-hand-width, $top: false);\n\n    @include shape($second:true);\n\n    background-color: $second-color;\n\n    transform-origin: bottom;\n    animation: rotate-arrow $one-minute linear infinite;\n\n  }\n\n  &__minute-hand {\n    position: absolute;\n    top: get-distance($minute-hand-height, $top:true);\n    left: get-distance($minute-hand-width, $top:false);\n\n    @include shape($second:false);\n\n    background-color: $minute-color;\n\n    transform-origin: bottom;\n    animation: rotate-arrow $one-hour linear infinite;\n  }\n}\n","@mixin circle($diameter) {\n  height: $diameter;\n  width: $diameter;\n  border-radius: 50%;\n}\n\n@mixin shape($second:false) {\n  @if $second {\n    height: $second-hand-height;\n    width: $second-hand-width;\n    border-radius: 40%;\n  }\n  @else {\n    height: $minute-hand-height;\n    width: $minute-hand-width;\n    border-radius: 40%;\n  }\n}\n","@function get-distance($elem-measurement, $top: true, $arrow:true) {\n  @if $arrow {\n    @if $top {\n      $result: 0.5 * $clock-diameter - $elem-measurement;\n      @return $result;\n    }\n    @else {\n      $result: 0.5 * $clock-diameter - 0.5 * $elem-measurement;\n      @return $result;\n    }\n  }\n  @else {\n    @if $top {\n      $result: 0.5 * $clock-diameter - $elem-measurement * 0.5;\n      @return $result;\n    }\n    @else {\n      $result: 0.5 * $clock-diameter - 0.5 * $dot-diameter;\n      @return $result;\n    }\n  }\n}\n",".dial {\n  @include circle($dial-diameter);\n\n  position: relative;\n\n  font-family: $numbers-font;\n  text-align: center;\n\n  &__number {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n\n    color: $numbers-color;\n\n    @for $i from 1 through 12 {\n      &--#{$i}::after {\n        content: \"#{$i}\";\n      }\n      &--#{$i} {\n        transform: rotate($i * 30deg);\n      }\n    }\n  }\n}\n"]}